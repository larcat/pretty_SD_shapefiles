{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Packages tigris and ACS and plotting school district data.\"\noutput: html_document\n---\nR provides easy to use packages that wrap the census TIGER shapefile database and the census American Community Survey database. Because of this, it is easy to plot reasonable maps in R of descriptive statistics at the district level for a given state.\n\nFurthermore, with a little bit of object hacking, you can create a geojson file useable in Tableau for your own purposes.\n```{r needed_libs, message=FALSE}\nlibrary(rgdal) # Used for outputting geojson files, and a dependency for tigris\nlibrary(tigris) # Intertface for the TIGER database\nlibrary(acs) # Interface for the ACS API\nlibrary(rgeos) # For cropping\nlibrary(raster) # For cropping\nlibrary(rgdal) # For outputting geoJSON -- Not actually executed in RMD\n\n```\nYou will need to request an API key from the census bureau for ACS API integration at:\n\n  http://api.census.gov/data/key_signup.html\n\n# Downloading School District Shapefiles\n\nTo download school district shapefiles we use the\n```{r, eval = FALSE}\nschool_districts()\n```\nfunction from tigris.\n\nTwo arguments are required: State, which takes 2-letter state abbreviations, and type\n\nThree kinds of school district shapefiles exist in TIGER:\n\n* Unified districts (type = \"unified\")\n* Elementary districts (type = \"elementary\")\n* Secondary districts (type = \"secondary\")\n\nTo get a basic unified district shapefile for Mass.:\n```{r basic_district, messages = FALSE}\nMA_unified <- school_districts(state = \"MA\",\n                               type = \"unified\")\n```\n\n# Hacking school district shapefiles together.\nIf you plot the unified districts, you won't get what you expect, exactly:\n\n```{r unified_plot}\nplot(MA_unified)\n```\n\nWe will need to bring in the secondary and elementary districts to get the expected plot.\n```{r sec_elem, messages = FALSE}\nMA_secondary <- school_districts(state = \"MA\",\n                                 type = \"secondary\")\n\nMA_elementary <- school_districts(state = \"MA\",\n                                  type = \"elementary\")\nplot(MA_secondary)\nplot(MA_elementary)\n```\n\nSadly, for the time being, the built-in tigris function\n```{r, eval = FALSE}\nrbind_tigris()\n```\nto handle shapefile merging doesn't work with multiple tigris shapefile types, which different districts technically are (there is a pull request in to change this.)\n```{r no_rbind_tigris, error = TRUE}\ntest <- rbind_tigris(MA_elementary, MA_secondary)\n```\nFor the time being, we can hack around this by:\n\n  1. Changing the tigris attribute for each shape file object.\n  2. Renaming the \"SDLEA\"\" columns for tigris_dataframe@data.\n```{r hack_tigris}\nattr(MA_unified, \"tigris\") <- \"sdall\"\nattr(MA_secondary, \"tigris\") <- \"sdall\"\nattr(MA_elementary, \"tigris\") <- \"sdall\"\n\nnames(MA_unified@data)[2] <- \"SDLEA\"\nnames(MA_secondary@data)[2] <- \"SDLEA\"\nnames(MA_elementary@data)[2] <- \"SDLEA\"\n\nMA_all_sd <- rbind_tigris(MA_unified,\n                          MA_secondary,\n                          MA_elementary)\n\nplot(MA_all_sd)\n```\nStill not quite there -- There's those polygons over water.\nPeeking inside the @data gives a clue and we have a way to remove those polygons.\n```{r remove water}\nnames(MA_all_sd@data)\n                \n# Any with no LAND area?\nMA_all_sd@data[which(MA_all_sd@data$ALAND == \"0\"), ]\n\n# Remove them.\nMA_all_sd <- MA_all_sd[which(MA_all_sd@data$ALAND != \"0\"), ]\n\nplot(MA_all_sd)\n```\nStill not quite there.\n\nA county shapefile from tigris using the catrographic boundaries (cb=TRUE) to crop down to the land will result in what we want.\nCartographic boundaries isn't callable on school districts, but for areas that it is, it gives outlines without land.\n```{r, message = FALSE}\noutline <- counties(state = \"MA\",\n                    cb = TRUE, \n                    resolution = \"500k\", \n                    detailed = TRUE)\n\nMA_all_sd_land <- intersect(MA_all_sd, outline)\n\nplot(MA_all_sd_land)\n```\n\n@Data is maintained:\n\n```{r}\nhead(MA_all_sd_land)\n```\n\nFinal step before we dump this badboy into Tableau is outputting to geoJSON\n```{r}\n# writeOGR(MA_all_sd_land, \"MA_all_sd_land.geojson\", layer=\"MA_all_sd_land\", driver=\"GeoJSON\")\n```\n\nCheck out: https://public.tableau.com/views/Pretty-fiedMASDs_/Sheet1?:embed=y&:display_count=yes\n\nFor the result!\n\n\nSources:\n  tigris by Dr. Kyle Walker via CRAN (https://cran.r-project.org)\n  \n  Stack Overflow user cengel for the cropping:\n    (https://gis.stackexchange.com/a/173263)\n  \n  For ggplot2 mapping and easier ACS plotting:\n  http://zevross.com/blog/2015/10/14/manipulating-and-mapping-us-census-data-in-r-using-the-acs-tigris-and-leaflet-packages-3/",
    "created" : 1491771337993.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1945330369",
    "id" : "9313E974",
    "lastKnownWriteTime" : 1492278066,
    "last_content_update" : 1492278066419,
    "path" : "~/SDP_tigris_ACS/tigris_ACS_RMD.Rmd",
    "project_path" : "tigris_ACS_RMD.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}